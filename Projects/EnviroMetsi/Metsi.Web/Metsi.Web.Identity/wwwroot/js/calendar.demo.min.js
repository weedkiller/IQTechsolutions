/*!
 * FullCalendar v1.6.4
 * Docs & License: http://arshaw.com/fullcalendar/
 * (c) 2013 Adam Shaw
 */

/*
 * Use fullcalendar.css for basic styling.
 * For event drag & drop, requires jQuery UI draggable.
 * For event resizing, requires jQuery UI resizable.
 */

var calendar;

document.addEventListener('DOMContentLoaded', function () {
    var containerEl = document.getElementById('external-events-list');
    new FullCalendar.Draggable(containerEl, {
        itemSelector: '.fc-event',
        eventData: function (eventEl) {
            return {
                title: $(eventEl).find('h5')[0].innerHTML,
                description: $(eventEl).find('p')[0].innerHTML
            }
        }
    });

    var calendarEl = document.getElementById('calendar');

    calendar = new FullCalendar.Calendar(calendarEl, {
        headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
        },
        selectable: true,
        droppable: true,
        dayMaxEvents: true,
        initialDate: new Date($.now()),
        navLinks: true, // can click day/week names to navigate views
        businessHours: true, // display business hours
        editable: true,
        navLinks: true,
        drop: function (arg) {
            // is the "remove after drop" checkbox checked?
            if (document.getElementById('drop-remove').checked) {
                // if so, remove the element from the "Draggable Events" list
                arg.draggedEl.parentNode.removeChild(arg.draggedEl);                
            }     
        },
        eventLeave: function (arg) {
            console.log('event left!', info.event);
        },
        eventReceive: function (arg) {
            var draggedItem = arg.draggedEl;
            var taskVal = "";
            var routeVal = "";

            if (draggedItem.hasAttribute("data-taskId")) {

                taskVal = draggedItem.attributes.getNamedItem("data-taskId").nodeValue;
            }
            if (draggedItem.hasAttribute("data-routeId")) {
                routeVal = draggedItem.attributes.getNamedItem("data-routeId").nodeValue;
            }

            var data = {
                startDate: arg.event.startStr,
                endDate: arg.event.startStr,
                name: draggedItem.attributes.getNamedItem("data-title").nodeValue,
                description: draggedItem.attributes.getNamedItem("data-description").nodeValue,
                taskId: taskVal,
                routeId: routeVal
            };  
            $.ajax({
                type: "POST",
                url: "/Calendar/Appointments/CreateAppointment",
                data: data,
                contentType: 'application/x-www-form-urlencoded',
                success: function (msg) {
                    console.log(msg);
                },
                error: function (xhr, textStatus, err) {
                    alert("An error with the following detials occured : "
                        + "\r\n == readyState: " + xhr.readyState
                        + "\r\n == responseText: " + xhr.responseText
                        + "\r\n == status: " + xhr.status
                        + "\r\n == text status: " + textStatus
                        + "\r\n == error: " + err);
                }
            });
        },
        select: function (arg) {
            var title = prompt('Event Title:');
            if (title) {
                calendar.addEvent({
                    title: title,
                    start: arg.start,
                    end: arg.end,
                    allDay: arg.allDay
                })
            }
            calendar.unselect()
        },
        eventClick: function (arg) {
            var url = "/Calendar/Appointments/AppointmentInfo?id=" + arg.event.id;

            $("#ModalPlaceHolder").load(url,
                function () {
                    $("#ModalPlaceHolder").modal("show");
                });
        },
        
        events: function (fetchInfo, successCallback, failureCallback) {
            $.ajax({
                type: "POST",
                url: "/Calendar/Appointments/GetUserAppointments",
                contentType: 'application/x-www-form-urlencoded',
                success: function (eventData) {
                    console.log(JSON.stringify(eventData)); //just to give a visual on the data. From what you were doing in your example it looks like your data is already in a format suitable to be used by fullCalendar, so no need to push it all into another array
                    successCallback(eventData);
                },
                error: function (req, status, error) {
                    alert(error);
                }
            });
        }
    });

    calendar.render();
});